activitydata <- read.csv("activity.csv")
str(activitydata)
activitydata$date <- as.Date(activitydata$date)
str(activitydata)
hist(activitydata$steps)
tapply(activitydata$steps, activitydata$date, sum)
View(activitydata)
#read in data
activityData <- read.csv("activity.csv")
#process dates
activityData$date <- as.Date(activityData$date)
sumData <- tapply(activityData$steps, activityData$date, sum)
str(sumData)
hist(sumData)
?hist
sumData <- tapply(activityData$steps, activityData$date, sum, simplify=FALSE)
str(sumData)
hist(sumData)
#calculate total number of steps each day
sumData <- tapply(activityData$steps, activityData$date, sum)
#create histogram
hist(sumData, xlab="Number of Steps per day", main="Histogram of Daily Steps")
sumData
hist(sumData, xlab="Number of Steps per day", main="Histogram of Daily Steps")
meanSteps <- mean(sumData)
meanSteps
meanSteps <- mean(sumData, na.rm = TRUE)
meanSteps
medianSteps <- median(sumData, na.rm = TRUE)
medianSteps
timeAvgData <- tapply(activityData$steps, activityData$interval, mean)
timeAvgData
timeAvgData <- tapply(activityData$steps, activityData$interval, mean, na.rm=TRUE)
timeAvgData
plot(timeAvgData, type="l")
hist(timeAvgData)
plot(timeAvgData, type="l")
str(timeAvgData)
?plot
plot(x=attributes(timeAvgData), y=timeAvgData)
attributes(timeAvgData)
timeAvgData
attributes(timeAvgData <- as.numeric(attributes(timeAvgData))
attributes(timeAvgData) <- as.numeric(attributes(timeAvgData))
as.numeric(attributes(timeAvgData))
attributes(timeAvgData)
as.numeric(attributes(timeAvgData)
)
timeAvgData <- tapply(activityData$steps, activityData$interval, mean, na.rm=TRUE, simplify=FALSE)
timeAvgData
names(timeAvgData)
as.numeric(names(timeAvgData))
names(timeAvgData) <- as.numeric(names(timeAvgData))
plot(timeAvgData)
plot(x=names(timeAvgData), y=timeAvgData)
plot(x=names(timeAvgData), y=timeAvgData, type="l")
plot(x=names(timeAvgData), y=timeAvgData, type="l", xlab="5-minute Intervals", ylab="Average Steps", main="Average Steps per 5-minute Interval")
max(timeAvgData)
?max
?lapply
lapply(timeAvgData, max)
sapply(timeAvgData, max)
str(sapply(timeAvgData, max))
str(timeAvgData)
max(unlist(timeAvgData))
str(max(unlist(timeAvgData)))
timeAvgData[[1]]
names(timeAvgData[[1]])
names(timeAvgData)[[1]]
which.is.max(timeAvgData)
which.max(timeAvgData)
timeAvgData[[104]]
str(which.max(timeAvgData))
names(which.max(timeAvgData))
bad <- is.na(activityData)
bad
bad <- is.na(activityData$steps)
str(bad)
sum(bad)
sum(!bad)
str(activityData)
imputedActivityData <- activityData
imputedActivityData$steps[is.na(imputedActivityData$steps)] <- tapply(activityData$steps, activityData$date, mean)
tapply(activityData$steps, activityData$date, mean)
tapply(activityData$steps, activityData$date, median)
tapply(activityData$steps, activityData$date, median, na.rm=TRUE)
timeAvgData
imputedActivityData$steps[is.na(imputedActivityData$steps)] <- timeAvgData
imputedActivityData <- activityData
imputedActivityData$steps[is.na(imputedActivityData$steps)]
mean(activityData$steps, na.rm=TRUE)
?ave
imputedActivityData$steps[is.na(imputedActivityData$steps)] <- ave(imputedActivityData$steps, imputedActivityData$interval, mean)
str(imputedActivityData$steps)
summary(imputedActivityData$steps)
imputedActivityData$steps[is.na(imputedActivityData$steps)] <- ave(imputedActivityData$steps, imputedActivityData$interval, FUN=function(x)mean(x, na.rm=TRUE))
ave(imputedActivityData$steps, imputedActivityData$interval, FUN=function(x)mean(x, na.rm=TRUE))
ave(imputedActivityData$steps, imputedActivityData$interval, FUN=function(x)mean(x, na.rm=TRUE))[is.na(imputedActivityData$steps)]
imputedActivityData <- activityData
ave(imputedActivityData$steps, imputedActivityData$interval, FUN=function(x)mean(x, na.rm=TRUE))[is.na(imputedActivityData$steps)]
View(imputedActivityData)
imputedActivityData$steps[is.na(imputedActivityData$steps)] <- ave(imputedActivityData$steps, imputedActivityData$interval, FUN=function(x)mean(x, na.rm=TRUE))[is.na(imputedActivityData$steps)]
View(imputedActivityData)
#read in data
activityData <- read.csv("activity.csv")
#process dates
activityData$date <- as.Date(activityData$date)
#calculate total number of steps each day
sumData <- tapply(activityData$steps, activityData$date, sum)
#create histogram
hist(sumData, xlab="Number of Steps per day", main="Histogram of Daily Steps")
#calculate mean
meanSteps <- mean(sumData, na.rm = TRUE)
#calculate median
medianSteps <- median(sumData, na.rm = TRUE)
#calculate total number of steps each day (ignoring NA)
timeAvgData <- tapply(activityData$steps, activityData$interval, mean, na.rm=TRUE, simplify=FALSE)
#change intervals from chr to numeric
names(timeAvgData) <- as.numeric(names(timeAvgData))
#plot average steps per 5-minute interval
plot(x=names(timeAvgData), y=timeAvgData, type="l", xlab="5-minute Intervals", ylab="Average Steps", main="Average Steps per 5-minute Interval")
#calculate location of max
maxAvgLoc <- names(which.max(timeAvgData))
maxAvg <- max(unlist(timeAvgData))
#calculate number of NAs in steps
bad <- is.na(activityData$steps)
countNA <- sum(bad)
#make new copy of dataset
imputedData <- activityData
#calculate average and replace
imputedData$steps[is.na(imputedData$steps)] <- ave(imputedData$steps, imputedData$interval, FUN=function(x)mean(x, na.rm=TRUE))[is.na(imputedData$steps)]
#calculate total number of steps each day (for imputed data)
sumDataNew <- tapply(imputedData$steps, imputedData$date, sum)
#create histogram
hist(sumDataNew, xlab="Number of Steps per day", main="Histogram of Daily Steps (imputed data)")
#calculate mean of imputed
meanStepsNew <- mean(sumDataNew, na.rm = TRUE)
#calculate median of imputed
medianStepsNew <- median(sumDataNew, na.rm = TRUE)
weekday(imputedData$date)
weekdays(imputedData$date)
?weekdays
dayname <- weekdays(imputedData$date)
dayname[grepl("S(aturday|unday"), dayname]
dayname[grepl("S(aturday|unday"),]
dayname[grepl("S(aturday|unday")]
dayname[grepl("S(aturday|unday", dayname)]
dayname[grepl("S(aturday|unday)", dayname)]
dayname[grepl("S(aturday|unday)", dayname)] = "weekend"
dayname
View(dayname)
dayname[grepl("!weekend", dayname)] = "weekday"
View(dayname)
dayname[grepl("Monday|Tuesday|Wednesday|Thursday|Friday", dayname)] = "weekday"
View(dayname)
str(dayname)
dayname <- factor(dayname)
str(dayname)
imputedData$dayname <- dayname
str(imputedData)
?tapply
tapply(activityData$steps, INDEX=list(activityData$interval, activityData$dayname), mean, simplify=FALSE)
str(activityData$interval)
str(activityData$dayname)
tapply(imputedData$steps, INDEX=list(imputedData$interval, imputedData$dayname), mean, simplify=FALSE)
timeAvgDataWeekday <- tapply(imputedData$steps, INDEX=list(imputedData$interval, imputedData$dayname), mean, simplify=FALSE)
str(timeAvgDataWeekday)
timeAvgDataWeekday <- tapply(imputedData$steps, INDEX=list(imputedData$interval, imputedData$dayname), mean, simplify=TRUE)
str(timeAvgDataWeekday)
plot(timeAvgDataWeekday)
attributes(timeAvgDataWeekday)
attributes(timeAvgDataWeekday[[1]])
dimnames(timeAvgDataWeekday)[[1]]
dimnames(timeAvgDataWeekday)[[2]]
plot(timeAvgDataWeekday, type="l")
library(lattice)
xyplot(interval ~ steps, data = timeAvgDataWeekday)
?aggregate
aggregate(imputedData$steps, list(imputedData$interval, imputedData$dayname), mean, simplify=FALSE)
aggregate(Steps = imputedData$steps, list(Interval = imputedData$interval, Day = imputedData$dayname), mean, simplify=FALSE)
aggregate(Steps = imputedData$steps, list(Interval = imputedData$interval, Day = imputedData$dayname), FUN = mean)
aggregate(list(Steps = imputedData$steps), list(Interval = imputedData$interval, Day = imputedData$dayname), FUN = mean)
xyplot(Interval ~ Steps, data = timeAvgDataWeekday)
xyplot(Interval ~ Steps | Day, data = timeAvgDataWeekday)
#find day names
dayname <- weekdays(imputedData$date)
#convert to weekend/weekday
dayname[grepl("S(aturday|unday)", dayname)] = "weekend"
dayname[grepl("Monday|Tuesday|Wednesday|Thursday|Friday", dayname)] = "weekday"
#create factor variable
dayname <- factor(dayname)
#add factor to data
imputedData$dayname <- dayname
#calculate average number of steps taken per 5 minute interval, on weekdays compared to weekends
timeAvgDataWeekday <- aggregate(list(Steps = imputedData$steps), list(Interval = imputedData$interval, Day = imputedData$dayname), FUN = mean)
xyplot(Interval ~ Steps | Day, data = timeAvgDataWeekday)
xyplot(Interval ~ Steps | Day, data = timeAvgDataWeekday, type="l")
xyplot(Steps ~ Interval | Day, data = timeAvgDataWeekday, type="l")
#read in data
activityData <- read.csv("activity.csv")
#process dates
activityData$date <- as.Date(activityData$date)
sumData <- tapply(activityData$steps, activityData$date, sum)
hist(sumData, xlab="Number of Steps per day", main="Histogram of Daily Steps")
#calculate mean
meanSteps <- mean(sumData, na.rm = TRUE)
#calculate median
medianSteps <- median(sumData, na.rm = TRUE)
timeAvgData <- tapply(activityData$steps, activityData$interval, mean, na.rm=TRUE, simplify=FALSE)
names(timeAvgData) <- as.numeric(names(timeAvgData))
plot(x=names(timeAvgData), y=timeAvgData, type="l", xlab="5-minute Intervals", ylab="Average Steps", main="Average Steps per 5-minute Interval")
maxAvgLoc <- names(which.max(timeAvgData))
maxAvg <- max(unlist(timeAvgData))
bad <- is.na(activityData$steps)
countNA <- sum(bad)
imputedData <- activityData
imputedData$steps[is.na(imputedData$steps)] <- ave(imputedData$steps, imputedData$interval, FUN=function(x)mean(x, na.rm=TRUE))[is.na(imputedData$steps)]
#calculate total number of steps each day (for imputed data)
sumDataNew <- tapply(imputedData$steps, imputedData$date, sum)
#create histogram
hist(sumDataNew, xlab="Number of Steps per day", main="Histogram of Daily Steps (imputed data)")
#calculate mean of imputed
meanStepsNew <- mean(sumDataNew, na.rm = TRUE)
#calculate median of imputed
medianStepsNew <- median(sumDataNew, na.rm = TRUE)
#load lattice, make sure that it's installed!
library(lattice)
#find day names
dayname <- weekdays(imputedData$date)
#convert to weekend/weekday
dayname[grepl("S(aturday|unday)", dayname)] = "weekend"
dayname[grepl("Monday|Tuesday|Wednesday|Thursday|Friday", dayname)] = "weekday"
#create factor variable
dayname <- factor(dayname)
#add factor to data
imputedData$dayname <- dayname
timeAvgDataWeekday <- aggregate(list(Steps = imputedData$steps), list(Interval = imputedData$interval, Day = imputedData$dayname), FUN = mean)
xyplot(Steps ~ Interval | Day, data = timeAvgDataWeekday, type="l", layout = c(1, 2), main="Activity Pattern Comparison between Weekdays and Weekends")
head(sumData)
sumData
mean(sumData)
mean(sumData, na.rm = TRUE)
activityData
View(activityData)
mean(sumData)
sumData
str(sumData)
sumData <- aggregate(activityData$steps, activityData$date, sum)
sumData <- aggregate(activityData$steps, list(activityData$date), sum)
View(sumData)
sumData <- aggregate(list(steps = activityData$steps), list(date = activityData$date), sum)
mean(sumData$steps, na.rm = TRUE)
str(sumData)
sum(sumData$steps, na.rm = TRUE)
